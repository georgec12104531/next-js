{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\georg\\\\OneDrive\\\\Desktop\\\\Projects\\\\next-js\\\\components\\\\Prices.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nvar Prices = function Prices(_ref) {\n  _s();\n\n  var bpi = _ref.bpi;\n  // const [list, setList] = useState(\"\");\n  var list = \"\";\n\n  var _useState = useState(\"USD\"),\n      currency = _useState[0],\n      setCurrency = _useState[1];\n\n  console.log(\"bpi: \", bpi);\n\n  if (currency === \"USD\") {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, \"Bitcoin rate for \", bpi.USD.description, \":\", \" \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, bpi.USD.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, bpi.USD.rate));\n  } else if (currency === \"b\") {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"Bitcoin rate for \", bpi.b.description, \":\", \" \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, bpi.b.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, bpi.b.rate));\n  } else if (currency === \"EUR\") {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, \"Bitcoin rate for \", bpi.EUR.description, \":\", \" \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, bpi.EUR.code), __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, bpi.EUR.rate));\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    className: \"list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, list), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return setCurrency(e.target.value);\n    },\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"b\"), __jsx(\"option\", {\n    value: \"EUR\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"EUR\")));\n};\n\n_s(Prices, \"mZOo+M/8Cx3D1iWsGz7XC1WyjwA=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["C:/Users/georg/OneDrive/Desktop/Projects/next-js/components/Prices.js"],"names":["useState","Prices","bpi","list","currency","setCurrency","console","log","USD","description","code","rate","b","EUR","e","target","value"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAa;AAAA;;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC1B;AACA,MAAIC,IAAI,GAAG,EAAX;;AAF0B,kBAGMH,QAAQ,CAAC,KAAD,CAHd;AAAA,MAGnBI,QAHmB;AAAA,MAGTC,WAHS;;AAI1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,GAArB;;AAEA,MAAIE,QAAQ,KAAK,KAAjB,EAAwB;AACtBD,IAAAA,IAAI,GACF;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBD,GAAG,CAACM,GAAJ,CAAQC,WAD5B,OAC0C,GAD1C,EAEE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCP,GAAG,CAACM,GAAJ,CAAQE,IAA/C,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASR,GAAG,CAACM,GAAJ,CAAQG,IAAjB,CAHF,CADF;AAOD,GARD,MAQO,IAAIP,QAAQ,KAAK,GAAjB,EAAsB;AAC3BD,IAAAA,IAAI,GACF;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBD,GAAG,CAACU,CAAJ,CAAMH,WAD1B,OACwC,GADxC,EAEE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCP,GAAG,CAACU,CAAJ,CAAMF,IAA7C,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASR,GAAG,CAACU,CAAJ,CAAMD,IAAf,CAHF,CADF;AAOD,GARM,MAQA,IAAIP,QAAQ,KAAK,KAAjB,EAAwB;AAC7BD,IAAAA,IAAI,GACF;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBD,GAAG,CAACW,GAAJ,CAAQJ,WAD5B,OAC0C,GAD1C,EAEE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCP,GAAG,CAACW,GAAJ,CAAQH,IAA/C,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASR,GAAG,CAACW,GAAJ,CAAQF,IAAjB,CAHF,CADF;AAOD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,IAA5B,CADF,EAEE;AACE,IAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,aAAOT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KADZ;AAEE,IAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,EAME;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CAFF,CADF;AAaD,CA7CD;;GAAMf,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Prices = ({ bpi }) => {\r\n  // const [list, setList] = useState(\"\");\r\n  let list = \"\";\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  console.log(\"bpi: \", bpi);\r\n\r\n  if (currency === \"USD\") {\r\n    list = (\r\n      <li className=\"list-group-item\">\r\n        Bitcoin rate for {bpi.USD.description}:{\" \"}\r\n        <span className=\"badge badge-primary\">{bpi.USD.code}</span>\r\n        <strong>{bpi.USD.rate}</strong>\r\n      </li>\r\n    );\r\n  } else if (currency === \"b\") {\r\n    list = (\r\n      <li className=\"list-group-item\">\r\n        Bitcoin rate for {bpi.b.description}:{\" \"}\r\n        <span className=\"badge badge-primary\">{bpi.b.code}</span>\r\n        <strong>{bpi.b.rate}</strong>\r\n      </li>\r\n    );\r\n  } else if (currency === \"EUR\") {\r\n    list = (\r\n      <li className=\"list-group-item\">\r\n        Bitcoin rate for {bpi.EUR.description}:{\" \"}\r\n        <span className=\"badge badge-primary\">{bpi.EUR.code}</span>\r\n        <strong>{bpi.EUR.rate}</strong>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group\">{list}</ul>\r\n      <select\r\n        onChange={(e) => setCurrency(e.target.value)}\r\n        className=\"form-control\"\r\n      >\r\n        <option value=\"USD\">USD</option>\r\n        <option value=\"b\">b</option>\r\n        <option value=\"EUR\">EUR</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prices;\r\n"]},"metadata":{},"sourceType":"module"}